FIFOs are files on disk, and consequently they have a unique system-wide ID (the file path) that can be used by processes to address them).
FIFOs need to be created and opened explicitly.
FIFOs need to be deleted explicitly.


- Creation
	- "mkfifo myfifo"
	- "int mkfifo(const char *pathname, mode_t mode)"
		ex.: mkfifo("myfifo", 0600);
- Deletion
	- "rm myfifo"
	- "int unlink(const char *path)"
		ex.: unlink("myfifo");
- Opening
	"a2b = open("a2b", O_WRONLY);"
	"b2a = open("b2a", O_RDONLY);"
- Closing
	"close(a2b);"
	"close(b2a);"
		
Special open behavior for FIFO: waits for the FIFO to be open for the complementary operation before returning
	a. Open ensures that when a FIFO is open, there is another process ready to deal with this processes operations 
		(i.e. read what this process writes, or write so that this process can read)
	b. Can lead to deadlock, if the FIFOs are not open in the same order.
	
OPEN FIFOS IN THE SAME ORDER
CREATE -> OPEN -> USE -> CLOSE -> DELETE
