GREP
	grep -E -i -v "[pattern]" [file]
	
		-E = extended
		-v = display lines that DO NOT match
		-i = case-insensitive

==============================================================================

SED
	a. search/replace (s)
		sed -E "s/[regex]/[replacement]/[flags]" [file]
			[flags]	- g = perform replacement everywhere on the line, not only first occurance
					- i = case-insensitive
			[replacement]	- can contain reference to the expressions grouped in the regex 
								(as \1, \2, etc)
								
		sed -E -i ... = change the file given as input
	
	b. Transliterate (y)
		sed -E "y/[characters]/[replacement]/" [file]
			- MUST HAVE: len(characters) = len(replacement)
		
	c. Delete lines (d)
		sed -E "/[regex]/d" [file]
		
==============================================================================

AWK
	awk -F[separator] 
	'
	BEGIN {block}
	[condition] {block}
	END {block}
	' 
	[file]
	
	Special variables
		a. NR - number of the current line of input
		b. NF - the number of fields on the current line
		c. $0 - the entire input line
		d. $1, $2, ... - the fields of the current line
		
	provide awk program in a file:
	awk -F[separator] -f prog.awk [file]
