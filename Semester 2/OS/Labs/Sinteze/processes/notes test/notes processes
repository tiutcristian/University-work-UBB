pid_t fork(void);
	returns:
		- 0 - in the child
		- child PID - in the parent
		- -1 - error
	
pid_t wait(int* status);
	- suspends the execution until a child finishes
	
pid_t waitpid(pid_t pid, int* status, int options);
	- wait(&status) <=> waitpid(-1, &status, 0)
	- pid value means:
		- < -1		- wait for any child having groupID=|pid|
		- -1		- wait for any child process
		- 0			- wait for any child having groupID=groupID(calling process)
		- > 0		- wait for child with processID=pid

exit(status)

- orphan process	- parent has finished before it
- zombie process	- it has finished and waits for the parent to call wait

====================================
	pid = fork();
	if(pid == 0) {
		// do child stuff
		exit(0);
	}
	//do parent stuff
	wait(0);
====================================
